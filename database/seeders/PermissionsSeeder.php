<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

class PermissionsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // Assign admin with all access
        $adminRole = Role::firstOrCreate(['name' => 'admin']);
        $adminRole->syncPermissions(Permission::where('guard_name', 'web')->get());

        // Assign fodig with access to fodig resources
        $fodigRole = Role::firstOrCreate(['name' => 'fodig']);
        $fodigRole->syncPermissions(Permission::whereIn('name', [
            'view-any SiebelApplet',
            'view SiebelApplet',
            'create SiebelApplet',
            'update SiebelApplet',
            'delete SiebelApplet',
            'view-any SiebelApplication',
            'view SiebelApplication',
            'create SiebelApplication',
            'update SiebelApplication',
            'delete SiebelApplication',
            'view-any SiebelBusinessComponent',
            'view SiebelBusinessComponent',
            'create SiebelBusinessComponent',
            'update SiebelBusinessComponent',
            'delete SiebelBusinessComponent',
            'view-any SiebelBusinessObject',
            'view SiebelBusinessObject',
            'create SiebelBusinessObject',
            'update SiebelBusinessObject',
            'delete SiebelBusinessObject',
            'view-any SiebelBusinessService',
            'view SiebelBusinessService',
            'create SiebelBusinessService',
            'update SiebelBusinessService',
            'delete SiebelBusinessService',
            'view-any SiebelClass',
            'view SiebelClass',
            'create SiebelClass',
            'update SiebelClass',
            'delete SiebelClass',
            'view-any SiebelEimInterfaceTable',
            'view SiebelEimInterfaceTable',
            'create SiebelEimInterfaceTable',
            'update SiebelEimInterfaceTable',
            'delete SiebelEimInterfaceTable',
            'view-any SiebelIntegrationObject',
            'view SiebelIntegrationObject',
            'create SiebelIntegrationObject',
            'update SiebelIntegrationObject',
            'delete SiebelIntegrationObject',
            'view-any SiebelLink',
            'view SiebelLink',
            'create SiebelLink',
            'update SiebelLink',
            'delete SiebelLink',
            'view-any SiebelProject',
            'view SiebelProject',
            'create SiebelProject',
            'update SiebelProject',
            'delete SiebelProject',
            'view-any SiebelScreen',
            'view SiebelScreen',
            'create SiebelScreen',
            'update SiebelScreen',
            'delete SiebelScreen',
            'view-any SiebelTable',
            'view SiebelTable',
            'create SiebelTable',
            'update SiebelTable',
            'delete SiebelTable',
            'view-any SiebelValue',
            'view SiebelValue',
            'create SiebelValue',
            'update SiebelValue',
            'delete SiebelValue',
            'view-any SiebelView',
            'view SiebelView',
            'create SiebelView',
            'update SiebelView',
            'delete SiebelView',
            'view-any SiebelWebPage',
            'view SiebelWebPage',
            'create SiebelWebPage',
            'update SiebelWebPage',
            'delete SiebelWebPage',
            'view-any SiebelWebTemplate',
            'view SiebelWebTemplate',
            'create SiebelWebTemplate',
            'update SiebelWebTemplate',
            'delete SiebelWebTemplate',
            'view-any SiebelWorkflowProcess',
            'view SiebelWorkflowProcess',
            'create SiebelWorkflowProcess',
            'update SiebelWorkflowProcess',
            'delete SiebelWorkflowProcess',
        ])->where('guard_name', 'web')->get());

        // Assign fodig-read-only with read only access to fodig resources
        $fodigReadOnlyRole = Role::firstOrCreate(['name' => 'fodig-view-only']);
        $fodigReadOnlyRole->syncPermissions(Permission::whereIn('name', [
            'view-any SiebelApplet',
            'view SiebelApplet',
            'view-any SiebelApplication',
            'view SiebelApplication',
            'view-any SiebelBusinessComponent',
            'view SiebelBusinessComponent',
            'view-any SiebelBusinessObject',
            'view SiebelBusinessObject',
            'view-any SiebelBusinessService',
            'view SiebelBusinessService',
            'view-any SiebelClass',
            'view SiebelClass',
            'view-any SiebelEimInterfaceTable',
            'view SiebelEimInterfaceTable',
            'view-any SiebelIntegrationObject',
            'view SiebelIntegrationObject',
            'view-any SiebelLink',
            'view SiebelLink',
            'view-any SiebelProject',
            'view SiebelProject',
            'view-any SiebelScreen',
            'view SiebelScreen',
            'view-any SiebelTable',
            'view SiebelTable',
            'view-any SiebelValue',
            'view SiebelValue',
            'view-any SiebelView',
            'view SiebelView',
            'view-any SiebelWebPage',
            'view SiebelWebPage',
            'view-any SiebelWebTemplate',
            'view SiebelWebTemplate',
            'view-any SiebelWorkflowProcess',
            'view SiebelWorkflowProcess',
        ])->where('guard_name', 'web')->get());

        // Assign forms with full access to forms resources
        $formsRole = Role::firstOrCreate(['name' => 'forms']);
        $formsRole->syncPermissions(Permission::whereIn('name', [
            'view-any Form',
            'view Form',
            'create Form',
            'update Form',
            'delete Form',
            'view-any ValueType',
            'view ValueType',
            'create ValueType',
            'update ValueType',
            'delete ValueType',
            'view-any UserType',
            'view UserType',
            'create UserType',
            'update UserType',
            'delete UserType',
            'view-any SelectOptions',
            'view SelectOptions',
            'create SelectOptions',
            'update SelectOptions',
            'delete SelectOptions',
            'view-any RenderedForm',
            'view RenderedForm',
            'create RenderedForm',
            'update RenderedForm',
            'delete RenderedForm',
            'view-any FormTag',
            'view FormTag',
            'create FormTag',
            'update FormTag',
            'delete FormTag',
            'view-any FormSoftwareSource',
            'view FormSoftwareSource',
            'create FormSoftwareSource',
            'update FormSoftwareSource',
            'delete FormSoftwareSource',
            'view-any FormRepository',
            'view FormRepository',
            'create FormRepository',
            'update FormRepository',
            'delete FormRepository',
            'view-any FormReach',
            'view FormReach',
            'create FormReach',
            'update FormReach',
            'delete FormReach',
            'view-any FormLocation',
            'view FormLocation',
            'create FormLocation',
            'update FormLocation',
            'delete FormLocation',
            'view-any FormFrequency',
            'view FormFrequency',
            'create FormFrequency',
            'update FormFrequency',
            'delete FormFrequency',
            'view-any FormField',
            'view FormField',
            'create FormField',
            'update FormField',
            'delete FormField',
            'view-any FillType',
            'view FillType',
            'create FillType',
            'update FillType',
            'delete FillType',
            'view-any FieldGroup',
            'view FieldGroup',
            'create FieldGroup',
            'update FieldGroup',
            'delete FieldGroup',
            'view-any DataType',
            'view DataType',
            'create DataType',
            'update DataType',
            'delete DataType',
            'view-any BusinessArea',
            'view BusinessArea',
            'create BusinessArea',
            'update BusinessArea',
            'delete BusinessArea',
        ])->where('guard_name', 'web')->get());

        // Assign forms-read-only with ready only access to forms resources
        $formsReadOnlyRole = Role::firstOrCreate(['name' => 'forms-view-only']);
        $formsReadOnlyRole->syncPermissions(Permission::whereIn('name', [
            'view-any Form',
            'view Form',
            'view-any ValueType',
            'view ValueType',
            'view-any UserType',
            'view UserType',
            'view-any SelectOptions',
            'view SelectOptions',
            'view-any RenderedForm',
            'view RenderedForm',
            'view-any FormTag',
            'view FormTag',
            'view-any FormSoftwareSource',
            'view FormSoftwareSource',
            'view-any FormRepository',
            'view FormRepository',
            'view-any FormReach',
            'view FormReach',
            'view-any FormLocation',
            'view FormLocation',
            'view-any FormFrequency',
            'view FormFrequency',
            'view-any FormField',
            'view FormField',
            'view-any FillType',
            'view FillType',
            'view-any FieldGroup',
            'view FieldGroup',
            'view-any DataType',
            'view DataType',
            'view-any BusinessArea',
            'view BusinessArea',
        ])->where('guard_name', 'web')->get());

        // Assign bre with access to bre resources
        $breRole = Role::firstOrCreate(['name' => 'bre']);
        $breRole->syncPermissions(Permission::whereIn('name', [
            'view-any BREField',
            'view BREField',
            'create BREField',
            'update BREField',
            'delete BREField',
            'view-any BREFieldGroup',
            'view BREFieldGroup',
            'create BREFieldGroup',
            'update BREFieldGroup',
            'delete BREFieldGroup',
            'view-any BRERule',
            'view BRERule',
            'create BRERule',
            'update BRERule',
            'delete BRERule',
            'view-any BREValueType',
            'view BREValueType',
            'create BREValueType',
            'update BREValueType',
            'delete BREValueType',
            'view-any BREICMCDWField',
            'view BREICMCDWField',
            'create BREICMCDWField',
            'update BREICMCDWField',
            'delete BREICMCDWField',
            'view-any BREValidationType',
            'view BREValidationType',
            'create BREValidationType',
            'update BREValidationType',
            'delete BREValidationType',
            'view-any BREDataValidation',
            'view BREDataValidation',
            'create BREDataValidation',
            'update BREDataValidation',
            'delete BREDataValidation',
            'view-any BREDataType',
            'view BREDataType',
            'create BREDataType',
            'update BREDataType',
            'delete BREDataType',

        ])->where('guard_name', 'web')->get());

        // Assign bre-read-only with ready only access to bre resources
        $breReadOnlyRole = Role::firstOrCreate(['name' => 'bre-view-only']);
        $breReadOnlyRole->syncPermissions(Permission::whereIn('name', [
            'view-any BREField',
            'view BREField',
            'view-any BREFieldGroup',
            'view BREFieldGroup',
            'view-any BRERule',
            'view BRERule',
            'view-any BREValueType',
            'view BREValueType',
            'view-any BREICMCDWField',
            'view BREICMCDWField',
            'view-any BREValidationType',
            'view BREValidationType',
            'view-any BREDataValidation',
            'view BREDataValidation',
            'view-any BREDataType',
            'view BREDataType',
        ])->where('guard_name', 'web')->get());
    }
}
